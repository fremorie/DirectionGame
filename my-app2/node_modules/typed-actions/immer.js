'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleActions = handleActions;

var _immer = require('immer');

var _immer2 = _interopRequireDefault(_immer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * There is an issue with imports ordering.
 *
 * When you export types A and B (that uses A), if you'll import type B before the A,
 * there will be some strange issues in some cases.
 *
 * This way we 'bound' the type declared in file to force flow use the correct type.
 *
 * TODO: (@lttb) need to open a type issue with a simple example.
 */


/* eslint-disable no-redeclare */
function handleActions(handlers) {
  var defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
    var action = arguments[1];
    return (0, _immer2.default)(state, function (draft) {
      if (!handlers[action.type]) return undefined;

      return handlers[action.type](draft, action, state);
    });
  };
}
/* eslint-enable no-redeclare */