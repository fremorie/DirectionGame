{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleActions = handleActions;\n\nvar _immer = require('immer');\n\nvar _immer2 = _interopRequireDefault(_immer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * There is an issue with imports ordering.\n *\n * When you export types A and B (that uses A), if you'll import type B before the A,\n * there will be some strange issues in some cases.\n *\n * This way we 'bound' the type declared in file to force flow use the correct type.\n *\n * TODO: (@lttb) need to open a type issue with a simple example.\n */\n\n/* eslint-disable no-redeclare */\n\n\nfunction handleActions(handlers) {\n  var defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n    var action = arguments[1];\n    return (0, _immer2.default)(state, function (draft) {\n      if (!handlers[action.type]) return undefined;\n      return handlers[action.type](draft, action, state);\n    });\n  };\n}\n/* eslint-enable no-redeclare */","map":null,"metadata":{},"sourceType":"script"}